package tryMe;

import java.sql.*;
import java.io.IOException;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;

// Class
public class Triathlon_DataEntryGUI {
	
	// Set up all the nodes 
	@FXML
	private TextField txtAthleteLastName;
	@FXML
	private TextField txtAthleteFirstName;
	@FXML
	private TextField txtGender;
	@FXML
	private TextField txtAthleteNumber;	
	@FXML
	private TextField txtAthletePhoneNumber;
	@FXML
	private TextField txtAthleteEmail;
	@FXML
	private TextField txtAthleteSwimmingScore;
	@FXML
	private TextField txtAthleteBikingScore;
	@FXML
	private TextField txtAthleteRunningScore;
	@FXML
	private TextField txtAthleteTotalScore;
	@FXML
	private TextField txtEmergencyContactName;
	@FXML
	private TextField txtEmergencyContactNumber;
	@FXML
	private Button btnSubmit;
	@FXML
	private Button btnClear;

	// 
	String inputAthleteLastName;
	String inputAthleteFirstName;
	String inputGender;
	String inputAthleteNumber;
	String inputAthletePhoneNumber;
	String inputAthleteEmail;
	String inputAthleteSwimmingScore;
	String inputAthleteBikingScore;
	String inputAthleteRunningScore;
	String inputAthleteTotalScore;
	String inputEmergencyContactName;
	String inputEmergencyContactNumber;
	
	@FXML
	private void initialize() throws IOException{
		
		//check here!!!!!
		String url = "jdbc:mysql://localhost:3306/triathlon";
		String user = "root";
		String password = "";
	
		// try cactch error.....
		try{
			Class.forName("com.mysql.jdbc.Driver").newInstance();
			
			Connection myConnection = DriverManager.getConnection(url, user, password);
			
			Statement myStatement = myConnection.createStatement();
			ResultSet result;
			
			myStatement.execute("Use triathlon");
			
			result = myStatement.executeQuery("select * from athletes_info");
			
			btnSubmit.setOnAction((event) ->{
				if(txtAthleteLastName.getText().isEmpty()){
			
				}
				else if(txtAthleteFirstName.getText().isEmpty()){
					
				}
				else if(txtGender.getText().isEmpty()){
					
				}
				else if(txtAthleteNumber.getText().isEmpty()){
					
				}
				else if(txtAthletePhoneNumber.getText().isEmpty()){
					
				}
				else if(txtAthleteEmail.getText().isEmpty()){
					
				}
				else if(txtAthleteSwimmingScore.getText().isEmpty()){
					
				}
				else if(txtAthleteBikingScore.getText().isEmpty()){
					
				}
				else if(txtAthleteRunningScore.getText().isEmpty()){
					
				}
				else if(txtAthleteTotalScore.getText().isEmpty()){
					
				}
				else if(txtEmergencyContactName.getText().isEmpty()){
					
				}
				else if(txtEmergencyContactNumber.getText().isEmpty()){
					
				}
				else{
					inputAthleteLastName = txtAthleteLastName.getText();
					inputAthleteFirstName = txtAthleteFirstName.getText();
					inputGender = txtGender.getText();
					inputAthleteNumber = txtAthleteNumber.getText();
					inputAthleteEmail = txtAthleteEmail.getText();
					inputAthletePhoneNumber = txtAthletePhoneNumber.getText();
					inputAthleteSwimmingScore = txtAthleteSwimmingScore.getText();
					inputAthleteBikingScore = txtAthleteBikingScore.getText();
					inputAthleteRunningScore = txtAthleteRunningScore.getText();
					inputAthleteTotalScore = txtAthleteTotalScore.getText();
					inputEmergencyContactName = txtEmergencyContactName.getText();
					inputEmergencyContactNumber = txtEmergencyContactNumber.getText();
					
					try{
						PreparedStatement preparedStatement = myConnection.prepareStatement("insert into athletes_info(Last Name, First Name, Gender, Athlete Number, Athlete Phone Number,Athlete Email, Athlete Swimming Score, Athlete Biking Score, Athlete Running Score, Athlete Total Score, Emergency Contact Name, Emergency Contact Number)"+
					"values(????????????)");
						 preparedStatement.setString(1, inputAthleteLastName);
						 preparedStatement.setString(2, inputAthleteFirstName);
						 preparedStatement.setString(3, inputGender);
						 preparedStatement.setString(4, inputAthleteNumber);
						 preparedStatement.setString(5, inputAthletePhoneNumber);
						 preparedStatement.setString(6, inputAthleteEmail);
						 preparedStatement.setString(7, inputAthleteSwimmingScore);
						 preparedStatement.setString(8, inputAthleteBikingScore);
						 preparedStatement.setString(9, inputAthleteRunningScore);
						 preparedStatement.setString(10, inputAthleteTotalScore);
						 preparedStatement.setString(11, inputEmergencyContactName);
						 preparedStatement.setString(12, inputEmergencyContactNumber);
						 
						 preparedStatement.executeUpdate();
						
					}
					catch(Exception ex){
						ex.printStackTrace();
					}
					txtAthleteLastName.clear();
					txtAthleteFirstName.clear();
					txtGender.clear();
					txtAthleteNumber.clear();				
					txtAthletePhoneNumber.clear();
					txtAthleteEmail.clear();
					txtAthleteSwimmingScore.clear();
					txtAthleteBikingScore.clear();
					txtAthleteRunningScore.clear();
					txtAthleteTotalScore.clear();
					txtEmergencyContactName.clear();
					txtEmergencyContactNumber.clear();

				}
			});
			//This is so the txtfields are clear once the Clear btn is click!
			btnClear.setOnAction((event) -> {
				txtAthleteLastName.clear();
				txtAthleteFirstName.clear();
				txtGender.clear();
				txtAthleteNumber.clear();				
				txtAthletePhoneNumber.clear();
				txtAthleteEmail.clear();
				txtAthleteSwimmingScore.clear();
				txtAthleteBikingScore.clear();
				txtAthleteRunningScore.clear();
				txtAthleteTotalScore.clear();
				txtEmergencyContactName.clear();
				txtEmergencyContactNumber.clear();
			
		});
	}
		catch (Exception e) {
			e.printStackTrace();
	
		}
	}

}
